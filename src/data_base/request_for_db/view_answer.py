from src.buttons.pm_buttons import action_pm_buttons
from src.data_base.request_for_db import utils
from src.settings.common import bot


answer = (
    '-------------------------------------\n' +
    'üî¢ ID –∑–∞–¥–∞—á–∏: {}\n\n' +
    'üñã –ê–≤—Ç–æ—Ä: {}\n\n' +
    'üóÇ –ü—Ä–æ–µ–∫—Ç: {}\n' +
    '-------------------------------------\n' +
    '‚è± –î–µ–π—Å—Ç–≤–∏—è: {}\n\n' +
    '‚ùì –û–∂–∏–¥–∞–Ω–∏—è: {}\n\n' +
    '‚ùóÔ∏è –†–µ–∞–ª—å–Ω–æ—Å—Ç—å: {}\n\n' +
    '‚åöÔ∏èÔ∏è –ü—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–∏—è: {}\n' +
    '-------------------------------------\n' +
    'üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: {}\n\n' +
    'üõ† –û—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω—ã–π: {}\n' +
    '-------------------------------------\n' +
    '–°—Ç–∞—Ç—É—Å: {}\n\n' +
    'üìå –ó–∞–º–µ—Ç–∫–∞ –∫ –∑–∞–¥–∞—á–µ: {}\n' +
    '-------------------------------------\n' +
    'üåê Url –≤ Jira: {}\n\n' +
    'üìå –ó–∞–º–µ—Ç–∫–∞ –∫ url: {}\n'
)


answer_for_jira = (
    '*–ü—Ä–æ–µ–∫—Ç:* {}\n\n' +
    '*–î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –æ—à–∏–±–∫–∏:* {}\n\n' +
    '*–û–∂–∏–¥–∞–Ω–∏—è (—á—Ç–æ –∏ –∫–∞–∫ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏):* {}\n\n' +
    '*–†–µ–∞–ª—å–Ω–æ—Å—Ç—å (—á—Ç–æ –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–µ–π—á–∞—Å):* {}\n\n' +
    '*–ü—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–∏—è:* {}\n\n' +
    '*–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è:* {}\n\n'
)


async def send_answer(task, note, jira, chat_id, reply_markup):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    note_text = await chek_note(note)
    jira_url = await chek_jira(jira, 'url')
    jira_note = await chek_jira(jira, 'note')
    await bot.send_message(
        chat_id=chat_id,
        text=answer.format(
            task.id,
            task.author,
            task.project,
            task.action,
            task.purpose,
            task.real,
            task.fixtures,
            task.consultation,
            task.responsible,
            task.status,
            note_text,
            jira_url,
            jira_note,
        ),
        reply_markup=reply_markup,
    )


async def send_photo(task, note, jira, chat_id, photo, reply_markup):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    note_text = await chek_note(note)
    jira_url = await chek_jira(jira, 'url')
    jira_note = await chek_jira(jira, 'note')
    await bot.send_photo(
        chat_id=chat_id,
        photo=photo,
        caption=answer.format(
            task.id,
            task.author,
            task.project,
            task.action,
            task.purpose,
            task.real,
            task.fixtures,
            task.consultation,
            task.responsible,
            task.status,
            note_text,
            jira_url,
            jira_note,
        ),
        reply_markup=reply_markup,
    )


async def send_document(task, note, jira, chat_id, document, reply_markup):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    note_text = await chek_note(note)
    jira_url = await chek_jira(jira, 'url')
    jira_note = await chek_jira(jira, 'note')
    await bot.send_document(
        chat_id=chat_id,
        document=document,
        caption=answer.format(
            task.id,
            task.author,
            task.project,
            task.action,
            task.purpose,
            task.real,
            task.fixtures,
            task.consultation,
            task.responsible,
            task.status,
            note_text,
            jira_url,
            jira_note,
        ),
        reply_markup=reply_markup,
    )


async def send_answer_for_jira(callback):
    task = await utils.definition_task_id(callback)

    await bot.send_message(
        chat_id=callback.from_user.id,
        text=answer_for_jira.format(
            task.project,
            task.action,
            task.purpose,
            task.real,
            task.fixtures,
            task.consultation,
        ),
        parse_mode='Markdown',
    )


async def chek_note(note):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è Note –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    if note:
        return note.text
    else:
        return ''


async def chek_jira(jira, field):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è JiraUrl –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    if jira:
        if field == 'url':
            return jira.url
        else:
            return jira.note
    return ''
